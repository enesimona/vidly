{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableheader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/utils/paginate.js","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/movieForm.jsx","firebase.js","components/loginForm.jsx","components/registerForm.jsx","components/Logout.jsx","components/resetPassword.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","getMovies","saveMovie","movie","movieInDb","find","m","genresAPI","genreName","Date","now","toString","push","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","className","map","page","key","href","onClick","e","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","Like","classes","style","cursor","aria-hidden","TableHeader","columns","column","path","sortColumnN","sortColumn","order","onSort","raiseSort","label","renderSortIcon","TableBody","createKey","data","content","get","renderCell","Table","MoviesTable","to","onLike","type","onDelete","SearchBox","value","onChange","placeholder","currentTarget","Movies","moviesP","useState","setMovies","setCurrentPage","setGenres","selectedGenre","setSelectedGenre","setSortColumn","query","setQuery","useEffect","genresDB","genresAll","concat","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","user","margin","length","nMovies","index","indexOf","newMovies","preventDefault","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","Input","err","rest","htmlFor","MovieForm","match","history","setMovie","errors","setErrors","schema","Joi","string","required","number","min","max","movieId","params","replace","mapToViewModel","validate","error","abortEarly","details","message","handleChange","errorsN","errorMessage","validateProperty","target","console","log","obj","schemaN","doSubmit","onSubmit","genreId","disabled","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoginForm","email","password","account","setAccount","a","auth","signInWithEmailAndPassword","then","currentUser","getIdToken","idToken","localStorage","setItem","location","window","from","pathname","catch","code","RegisterForm","createUserWithEmailAndPassword","onAuthStateChanged","Logout","signOut","removeItem","ResetPassword","setEmail","emailHasBeenSent","action","event","ProtectedRoute","Component","component","render","isLoggedIn","getItem","App","setUser","jwt","jwtDecode","exact","Boolean","hostname","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wOAAaA,G,MAAS,CACpB,CAAEC,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,cAGpC,SAASC,IACd,OAAOH,EAAOI,QAAO,SAACC,GAAD,OAAOA,KCL9B,IAAMC,EAAS,CACb,CACEL,IAAK,2BACLM,MAAO,aACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,UAChDO,cAAe,EACfC,gBAAiB,IACjBC,YAAa,2BACbC,OAAO,GAET,CACEX,IAAK,2BACLM,MAAO,WACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,UAChDO,cAAe,EACfC,gBAAiB,KAEnB,CACET,IAAK,2BACLM,MAAO,UACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,YAChDO,cAAe,EACfC,gBAAiB,KAEnB,CACET,IAAK,2BACLM,MAAO,gBACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,UAChDO,cAAe,EACfC,gBAAiB,KAEnB,CACET,IAAK,2BACLM,MAAO,WACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,UAChDO,cAAe,EACfC,gBAAiB,KAEnB,CACET,IAAK,2BACLM,MAAO,mBACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,UAChDO,cAAe,EACfC,gBAAiB,KAEnB,CACET,IAAK,2BACLM,MAAO,YACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,YAChDO,cAAe,EACfC,gBAAiB,KAEnB,CACET,IAAK,2BACLM,MAAO,kBACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,YAChDO,cAAe,EACfC,gBAAiB,KAEnB,CACET,IAAK,2BACLM,MAAO,eACPC,MAAO,CAAEP,IAAK,2BAA4BC,KAAM,UAChDO,cAAe,EACfC,gBAAiB,MAId,SAASG,IACd,OAAOP,EAOF,SAASQ,EAAUC,GACxB,IAAIC,EAAYV,EAAOW,MAAK,SAACC,GAAD,OAAOA,EAAEjB,MAAQc,EAAMd,QAAQ,GAW3D,OAVAe,EAAUT,MAAQQ,EAAMR,MACxBS,EAAUR,MAAQW,EAAiBF,MAAK,SAACZ,GAAD,OAAOA,EAAEH,OAASa,EAAMK,aAChEJ,EAAUP,cAAgBM,EAAMN,cAChCO,EAAUN,gBAAkBK,EAAML,gBAE7BM,EAAUf,MACbe,EAAUf,IAAMoB,KAAKC,MAAMC,WAC3BjB,EAAOkB,KAAKR,IAGPA,E,qBC/CMS,EAvCI,SAACC,GAAW,IACrBC,EAAoDD,EAApDC,WAAYC,EAAwCF,EAAxCE,SAAUC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,aAGrCC,EAAaC,KAAKC,KAAKN,EAAaC,GAC1C,GAAmB,IAAfG,EAAkB,OAAO,KAC7B,IAAMG,EAAQC,IAAEC,MAAM,EAAGL,EAAa,GAItC,OACE,6BACE,wBAAIM,UAAU,cACXH,EAAMI,KAAI,SAACC,GAAD,OACT,wBACEC,IAAKD,EACLF,UAAWE,IAASV,EAAc,mBAAqB,aAEvD,uBACEY,KAAK,GACLJ,UAAU,YACVK,QAAS,SAACC,GAAD,OAAOb,EAAaS,EAAMI,KAElCJ,UCzBf,IAAMK,EAAY,SAAClB,GAAW,IAE1BmB,EAKEnB,EALFmB,MACAC,EAIEpB,EAJFoB,aACAC,EAGErB,EAHFqB,cACAC,EAEEtB,EAFFsB,aACAC,EACEvB,EADFuB,aAEF,OACE,wBAAIZ,UAAU,cACXQ,EAAMP,KAAI,SAACY,GAAD,OACT,wBACER,QAAS,kBAAMM,EAAaE,IAC5BV,IAAKU,EAAKH,GACVV,UACEa,IAASD,EAAe,yBAA2B,mBAGpDC,EAAKJ,SAOhBF,EAAUO,aAAe,CACvBL,aAAc,OACdC,cAAe,OAGFH,QCdAQ,EAbF,SAAC1B,GACZ,IAAI2B,EAAU,cAEd,OADK3B,EAAMd,QAAOyC,GAAW,MAE3B,uBACEX,QAAShB,EAAMgB,QACfY,MAAO,CAAEC,OAAQ,WACjBlB,UAAWgB,EACXG,cAAY,U,OC8BHC,EArCK,SAAC/B,GAoBnB,OACE,+BACE,4BACGA,EAAMgC,QAAQpB,KAAI,SAACqB,GAAD,OACjB,wBACEtB,UAAU,YACVG,IAAKmB,EAAOC,MAAQD,EAAOnB,IAC3BE,QAAS,kBA1BD,SAACkB,GACjB,IAAMC,EAAW,eAAQnC,EAAMoC,YAE3BD,EAAYD,OAASA,EACvBC,EAAYE,MAA8B,QAAtBF,EAAYE,MAAkB,OAAS,OAE3DF,EAAYD,KAAOA,EACnBC,EAAYE,MAAQ,OAEtBrC,EAAMsC,OAAOH,GAiBUI,CAAUN,EAAOC,QAE/BD,EAAOO,MALV,IAXe,SAACP,GAAY,IAC1BG,EAAepC,EAAfoC,WAER,OAAIH,EAAOC,OAASE,EAAWF,KAAa,KACnB,QAArBE,EAAWC,MAAwB,uBAAG1B,UAAU,mBAC7C,uBAAGA,UAAU,oBAWI8B,CAAeR,UCT5BS,EAvBG,SAAC1C,GACjB,IAIM2C,EAAY,SAACnB,EAAMS,GACvB,OAAOT,EAAKjD,KAAO0D,EAAOC,MAAQD,EAAOnB,MAGnC8B,EAAkB5C,EAAlB4C,KAAMZ,EAAYhC,EAAZgC,QACd,OACE,+BACGY,EAAKhC,KAAI,SAACY,GAAD,OACR,wBAAIV,IAAKU,EAAKjD,KACXyD,EAAQpB,KAAI,SAACqB,GAAD,OACX,wBAAInB,IAAK6B,EAAUnB,EAAMS,IAdhB,SAACT,EAAMS,GACxB,OAAIA,EAAOY,QAAgBZ,EAAOY,QAAQrB,GACnCf,IAAEqC,IAAItB,EAAMS,EAAOC,MAYiBa,CAAWvB,EAAMS,aCCjDe,EAfD,SAAChD,GAAW,IAChBgC,EAAsChC,EAAtCgC,QAASM,EAA6BtC,EAA7BsC,OAAQF,EAAqBpC,EAArBoC,WAAYQ,EAAS5C,EAAT4C,KAErC,OACE,2BAAOjC,UAAU,SACf,kBAAC,EAAD,CACEqB,QAASA,EACTI,WAAYA,EACZE,OAAQA,IAEV,kBAAC,EAAD,CAAWM,KAAMA,EAAMZ,QAASA,M,OCsCvBiB,EA3CK,SAACjD,GAAW,IACtBpB,EAA+BoB,EAA/BpB,OAAQ0D,EAAuBtC,EAAvBsC,OAAQF,EAAepC,EAAfoC,WAClBJ,EAAU,CACd,CACEE,KAAM,QACNM,MAAO,QACPK,QAAS,SAACxD,GAAD,OACP,kBAAC,IAAD,CAAM6D,GAAE,kBAAa7D,EAAMd,MAAQc,EAAMR,SAG7C,CAAEqD,KAAM,aAAcM,MAAO,SAC7B,CAAEN,KAAM,gBAAiBM,MAAO,SAChC,CAAEN,KAAM,kBAAmBM,MAAO,QAClC,CACE1B,IAAK,OACL+B,QAAS,SAACxD,GAAD,OACP,kBAAC,EAAD,CAAMH,MAAOG,EAAMH,MAAO8B,QAAS,kBAAMhB,EAAMmD,OAAO9D,QAG1D,CACEyB,IAAK,SACL+B,QAAS,SAACxD,GAAD,OACP,4BACE+D,KAAK,SACLzC,UAAU,iBACVK,QAAS,kBAAMhB,EAAMqD,SAAShE,KAHhC,aAWN,OACE,kBAAC,EAAD,CACE2C,QAASA,EACTY,KAAMhE,EACNwD,WAAYA,EACZE,OAAQA,K,QChCCgB,EAbG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,2BACEJ,KAAK,OACL5E,KAAK,QACLmC,UAAU,oBACV8C,YAAY,YACZF,MAAOA,EACPC,SAAU,SAACvC,GAAD,OAAOuC,EAASvC,EAAEyC,cAAcH,WCsHjCI,EAnHA,SAAC3D,GAAW,IAUrB4D,EAVoB,EACIC,mBAAS,IADb,mBACjBjF,EADiB,KACTkF,EADS,OAEID,mBAAS,GAFb,mBAEjB3D,EAFiB,aAGc2D,mBAAS,IAHvB,mBAGjB1D,EAHiB,KAGJ4D,EAHI,OAIIF,mBAAS,IAJb,mBAIjBvF,EAJiB,KAIT0F,EAJS,OAKkBH,mBAAS,MAL3B,mBAKjBI,EALiB,KAKFC,EALE,OAMYL,mBAAS,CAAE3B,KAAM,QAASG,MAAO,QAN7C,mBAMjBD,EANiB,KAML+B,EANK,OAOEN,mBAAS,IAPX,mBAOjBO,EAPiB,KAOVC,EAPU,KAYxBC,qBAAU,WACRR,EAAU3E,GACV,IAAIoF,EAAW9F,IACX+F,EAAY,CAAC,CAAEjG,IAAK,GAAIC,KAAM,eAAgBiG,OAAOF,GACzDP,EAAUQ,KACT,IAGH,IAAIE,EAAW9F,EACXwF,EACFM,EAAW9F,EAAOF,QAAO,SAACc,GAAD,OACvBA,EAAEX,MAAM8F,cAAcC,WAAWR,EAAMO,kBAElCV,GAAiBA,EAAc1F,MACtCmG,EAAW9F,EAAOF,QAAO,SAACc,GAAD,OAAOA,EAAEV,MAAMP,MAAQ0F,EAAc1F,QAIhEqF,ECzCK,SAAkBzC,EAAO0D,EAAY3E,GAC1C,IAAM4E,GAAcD,EAAa,GAAK3E,EAEtC,OAAOO,IAAEU,GAAO4D,MAAMD,GAAYE,KAAK9E,GAAUqD,QDsCvC0B,CAFDxE,IAAEyE,QAAQR,EAAU,CAACtC,EAAWF,MAAO,CAACE,EAAWC,QAEjClC,EAAaD,GA4CxC,OACE,yBAAKS,UAAU,oBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CACEQ,MAAO7C,EACPgD,aAtBgB,SAACxC,GACzBoF,EAAiBpF,GACjBiF,EAAe,GACfM,EAAS,KAoBD9C,aAAc0C,KAGlB,yBAAKtD,UAAU,OACZX,EAAMmF,MACL,kBAAC,IAAD,CACEjC,GAAG,cACHvC,UAAU,kBACViB,MAAO,CAAEwD,OAAQ,eAHnB,aAQF,4BA5DgB,IAAlBxG,EAAOyG,OACH,iCAEA,WAAN,OAAkBX,EAASW,OAA3B,4BA0DI,kBAAC,EAAD,CAAW9B,MAAOa,EAAOZ,SA3BZ,SAACY,GACpBC,EAASD,GACTF,EAAiB,MACjBH,EAAe,MAyBT,kBAAC,EAAD,CACEnF,OAAQgF,EACRT,OAhDS,SAAC9D,GAClB,IAAMiG,EAAO,YAAO1G,GACd2G,EAAQD,EAAQE,QAAQnG,GAC9BiG,EAAQC,GAAR,eAAsBD,EAAQC,IAC9BD,EAAQC,GAAOrG,OAASoG,EAAQC,GAAOrG,MACvC4E,EAAUwB,IA4CFjC,SAtDW,SAAChE,GACpB,IAAIoG,EAAY7G,EAAOF,QAAO,SAAC8C,GAAD,OAAUA,EAAKjD,MAAQc,EAAMd,OAC3DuF,EAAU2B,IAqDFnD,OApCS,SAACF,GAClB+B,EAAc/B,IAoCNA,WAAYA,IAEd,kBAAC,EAAD,CACEnC,WAAYyE,EAASW,OACrBnF,SAAUA,EACVE,aAlEe,SAACS,EAAMI,GAC9BA,EAAEyE,iBACF3B,EAAelD,IAiEPV,YAAaA,Q,OElHVwF,EAJG,WAChB,OAAO,0CCGMC,EAJC,WACd,OAAO,wCCGMC,EAJE,WACf,OAAO,gDCkDMC,EAlDA,SAAC9F,GACd,OACE,yBAAKW,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,eAAeuC,GAAG,KAAlC,SAGA,4BACEvC,UAAU,iBACVyC,KAAK,SACL2C,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMxF,UAAU,yBAElB,yBAAKA,UAAU,sCAAsCyF,GAAG,aACtD,kBAAC,IAAD,CAASzF,UAAU,oBAAoBuC,GAAG,WAA1C,UAGA,kBAAC,IAAD,CAASvC,UAAU,oBAAoBuC,GAAG,cAA1C,aAGA,kBAAC,IAAD,CAASvC,UAAU,oBAAoBuC,GAAG,YAA1C,YAIElD,EAAMmF,MACN,kBAAC,IAAMkB,SAAP,KACE,kBAAC,IAAD,CAAS1F,UAAU,oBAAoBuC,GAAG,UAA1C,SAGA,kBAAC,IAAD,CAASvC,UAAU,oBAAoBuC,GAAG,aAA1C,aAKHlD,EAAMmF,MACL,kBAAC,IAAMkB,SAAP,KACE,kBAAC,IAAD,CAAS1F,UAAU,oBAAoBuC,GAAG,WAA1C,c,uBCvBGoD,EAlBD,SAAC,GAAmC,IAAjC9H,EAAgC,EAAhCA,KAAMgE,EAA0B,EAA1BA,MAAO+D,EAAmB,EAAnBA,IAAQC,EAAW,sCAC/C,OACE,yBAAK7F,UAAU,cACb,2BAAO8F,QAASjI,GAAOgE,GACvB,2CACMgE,EADN,CAEEJ,GAAG,WACH5H,KAAMA,EACNmC,UAAU,kBAKX4F,GAAO,yBAAK5F,UAAU,sBAAsB4F,K,gBCiJpCG,EA1JG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACZ/C,mBAAS,IADG,mBACjCvF,EADiC,KACzB0F,EADyB,OAEdH,mBAAS,CACjChF,MAAO,GACPa,UAAW,GACXX,cAAe,EACfC,gBAAiB,IANqB,mBAEjCK,EAFiC,KAE1BwH,EAF0B,OASZhD,mBAAS,CACnChF,MAAO,GACPa,UAAW,GACXX,cAAe,GACfC,gBAAiB,KAbqB,mBASjC8H,EATiC,KASzBC,EATyB,KAgBlCC,EAAS,CACbzI,IAAK0I,IAAIC,SACTrI,MAAOoI,IAAIC,SAASC,WAAW3E,MAAM,SACrC9C,UAAWuH,IAAIC,SAASC,WAAW3E,MAAM,SACzCzD,cAAekI,IAAIG,SAChBD,WACAE,IAAI,GACJC,IAAI,KACJ9E,MAAM,mBACTxD,gBAAiBiI,IAAIG,SAASD,WAAWE,IAAI,GAAGC,IAAI,IAAI9E,MAAM,SAI1D+E,EAAUZ,EAAMa,OAAOpB,GAE7B9B,qBAAU,WACR,IAAMhG,EAASG,IAGf,GAFAuF,EAAU1F,GAEM,QAAZiJ,EAAJ,CAEA,IhB+BqBnB,EgB/Bf/G,GhB+Be+G,EgB/BEmB,EhBgClB3I,EAAOW,MAAK,SAACC,GAAD,OAAOA,EAAEjB,MAAQ6H,MgB9BlC,IAAK/G,EAAO,OAAOuH,EAAQa,QAAQ,cAEnCZ,EAASa,EAAerI,OACvB,IAEH,IAAMqI,EAAiB,SAACrI,GACtB,MAAO,CACLd,IAAKc,EAAMd,IACXM,MAAOQ,EAAMR,MACba,UAAWL,EAAMP,MAAMN,KACvBO,cAAeM,EAAMN,cACrBC,gBAAiBK,EAAML,kBAIrB2I,EAAW,WACf,IACQC,EAAUX,IAAIU,SAAStI,EAAO2H,EADtB,CAAEa,YAAY,IACtBD,MACR,IAAKA,EAAO,OAAO,KAEnB,IALqB,EAKfd,EAAS,GALM,cAMJc,EAAME,SANF,IAMrB,gCAAStG,EAAT,QAAgCsF,EAAOtF,EAAKU,KAAK,IAAMV,EAAKuG,SANvC,8BAOrB,OAAOjB,GAGHkB,EAAe,SAAC/G,GACpB,IAAMgH,EAAO,eAAQnB,GACfoB,EAAeC,EAAiBlH,EAAEmH,QACpCF,EAAcD,EAAQhH,EAAEmH,OAAO5J,MAAQ0J,SAC/BD,EAAQhH,EAAEmH,OAAO5J,MAJH,MAMJyC,EAAEmH,OAAlB5J,EANoB,EAMpBA,KAAM+E,EANc,EAMdA,MACZsD,EAAS,2BACJxH,GADG,kBAELb,EAAO+E,KAEV8E,QAAQC,IAAI,SAAWjJ,GACvB0H,EAAUkB,IAUNE,EAAmB,SAAC,GAAqB,IAAnB3J,EAAkB,EAAlBA,KAAM+E,EAAY,EAAZA,MAC1BgF,EAAG,eAAM/J,EAAO+E,GAChBiF,EAAO,eAAMhK,EAAOwI,EAAOxI,IACjC6J,QAAQC,IAAI,WAAYE,GAHoB,IAIpCZ,EAAUX,IAAIU,SAASY,EAAKC,GAA5BZ,MACR,OAAOA,EAAQA,EAAME,QAAQ,GAAGC,QAAU,MAGtCU,EAAW,WACfrJ,EAAUC,GACVuH,EAAQ9G,KAAK,YAGf,OACE,6BAEE,0CACA,0BAAM4I,SAxBW,SAACzH,GACpBA,EAAEyE,iBACF,IAAMoB,EAASa,IACfZ,EAAqB,OAAXD,EAAkBA,EAAS,IACrC2B,MAqBI,kBAAC,EAAD,CACErF,KA7EK,OA8EL5E,KAAK,QACL+E,MAAOlE,EAAMR,MACb2D,MAAM,QACNgB,SAAUwE,EACVzB,IAAKO,EAAOjI,QAGd,yBAAK8B,UAAU,cACb,wCACA,4BACEA,UAAU,eACV4C,MAAOlE,EAAMK,UACblB,KAAK,YACLgE,MAAM,QACNgB,SAAUwE,EACVzB,IAAKO,EAAO6B,SAEXrK,EAAOsC,KAAI,SAAC9B,GAAD,OACV,gCAASA,EAAMN,WAKrB,kBAAC,EAAD,CACE4E,KAAK,SACL5E,KAAK,gBACL+E,MAAOlE,EAAMN,cACbyD,MAAM,kBACNgB,SAAUwE,EACVzB,IAAKO,EAAO/H,gBAGd,kBAAC,EAAD,CACEqE,KAAK,SACL5E,KAAK,kBACL+E,MAAOlE,EAAML,gBACbwD,MAAM,OACNgB,SAAUwE,EACVzB,IAAKO,EAAO9H,kBAEd,4BAAQ4J,SAAUjB,IAAYhH,UAAU,mBACzB,QAAZ4G,EAAoB,YAAc,iB,iCC3I9BsB,E,OAFFC,EAASC,cAVP,CACbC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CCiIMC,EApIG,SAACvJ,GAAW,IAAD,EACG6D,mBAAS,CAAE2F,MAAO,GAAIC,SAAU,KADnC,mBACpBC,EADoB,KACXC,EADW,OAEC9F,mBAAS,CAAE2F,MAAO,GAAIC,SAAU,KAFjC,mBAEpB3C,EAFoB,KAEZC,EAFY,KAKrBC,EAAS,CACbwC,MAAOvC,IAAIC,SAASC,WAAW3E,MAAM,SACrCiH,SAAUxC,IAAIC,SAASC,WAAW3E,MAAM,aAGpCmF,EAAW,WACf,IACQC,EAAUX,IAAIU,SAAS+B,EAAS1C,EADxB,CAAEa,YAAY,IACtBD,MACR,IAAKA,EAAO,OAAO,KAEnB,IALqB,EAKfd,EAAS,GALM,cAMJc,EAAME,SANF,IAMrB,gCAAStG,EAAT,QAAgCsF,EAAOtF,EAAKU,KAAK,IAAMV,EAAKuG,SANvC,8BAOrB,OAAOjB,GAkBH2B,EAAQ,uCAAG,sBAAAmB,EAAA,sDAGff,EACGgB,OACAC,2BAA2BJ,EAAQF,MAAOE,EAAQD,UAClDM,MAAK,WACJ1B,QAAQC,IAAI,YACZO,EACGgB,OACAG,YAAYC,YAAW,GACvBF,MAAK,SAAUG,GACdC,aAAaC,QAAQ,QAASF,GAE9B,IAAMG,EAAWrK,EAAMqK,SACvBC,OAAOD,SACLA,EAASE,MAAQF,EAASE,KAAKC,SAC3BH,EAASE,KAAKC,SACd,OAEPC,OAAM,SAAU7C,UAIpB6C,OAAM,SAAC7C,GACN,OAAQA,EAAM8C,MACZ,IAAK,qBACL,IAAK,qBACL,IAAK,sBACH3D,EAAU,CAAEyC,MAAO5B,EAAMG,UACzB,MACF,IAAK,sBACHhB,EAAU,CAAE0C,SAAU7B,EAAMG,cAhCrB,2CAAH,qDA6CRC,EAAe,SAAC/G,GACpB,IAAMgH,EAAO,eAAQnB,GACfoB,EATiB,SAAC,GAAqB,IAAnB1J,EAAkB,EAAlBA,KAAM+E,EAAY,EAAZA,MAC1BgF,EAAG,eAAM/J,EAAO+E,GAChBiF,EAAO,eAAMhK,EAAOwI,EAAOxI,IACzBoJ,EAAUX,IAAIU,SAASY,EAAKC,GAA5BZ,MACR,OAAOA,EAAQA,EAAME,QAAQ,GAAGC,QAAU,KAKrBI,CAAiBlH,EAAEmH,QACpCF,EAAcD,EAAQhH,EAAEmH,OAAO5J,MAAQ0J,SAC/BD,EAAQhH,EAAEmH,OAAO5J,MAJH,MAMJyC,EAAEmH,OAAlB5J,EANoB,EAMpBA,KAAM+E,EANc,EAMdA,MACZoG,EAAW,2BACND,GADK,kBAEPlL,EAAO+E,KAEVwD,EAAUkB,IAGZ,OACE,6BACE,qCACA,0BAAMS,SArEW,SAACzH,GACpBA,EAAEyE,iBACF,IAAMoB,EAASa,IACfZ,EAAqB,OAAXD,EAAkBA,EAAS,IACrC2B,MAkEI,kBAAC,EAAD,CACErF,KAhGK,OAiGL5E,KAAK,QACL+E,MAAOmG,EAAQF,MACfhH,MAAM,QACNgB,SAAUwE,EACVzB,IAAKO,EAAO0C,QAEd,kBAAC,EAAD,CACEpG,KAAK,WACL5E,KAAK,WACL+E,MAAOmG,EAAQD,SACfjH,MAAM,WACNgB,SAAUwE,EACVzB,IAAKO,EAAO2C,WAEd,4BAAQb,SAAUjB,IAAYhH,UAAU,mBAAxC,UAIF,uBAAGA,UAAU,oBAAb,yBACyB,IACvB,kBAAC,IAAD,CAAMuC,GAAG,WAAWvC,UAAU,qCAA9B,iBAEQ,IACR,6BAAO,IACP,kBAAC,IAAD,CAAMuC,GAAG,iBAAiBvC,UAAU,qCAApC,uBC2COgK,EAvKM,SAAC3K,GAAW,IAAD,EACA6D,mBAAS,CACrC2F,MAAO,GACPC,SAAU,KAHkB,mBACvBC,EADuB,KACdC,EADc,OAMF9F,mBAAS,CACnC2F,MAAO,GACPC,SAAU,KARkB,mBAMvB3C,EANuB,KAMfC,EANe,KAWxBC,EAAS,CACbwC,MAAOvC,IAAIC,SAASC,WAAWqC,QAAQhH,MAAM,SAC7CiH,SAAUxC,IAAIC,SAASG,IAAI,GAAGC,IAAI,IAAIH,YAIlCQ,EAAW,WACf,IACQC,EAAUX,IAAIU,SAAS+B,EAAS1C,EADxB,CAAEa,YAAY,IACtBD,MACR,IAAKA,EAAO,OAAO,KAEnB,IALqB,EAKfd,EAAS,GALM,cAMJc,EAAME,SANF,IAMrB,2BAAgC,CAAC,IAAxBtG,EAAuB,QAE9B,MAAqB,UAAjBA,EAAKU,KAAK,IAAmC,aAAjBV,EAAKU,KAAK,IACxC4E,EAAOtF,EAAKU,KAAK,IAAMV,EAAKuG,QACrBjB,GAEA,MAZU,gCAkCjB2B,EAAW,WAEfI,EACGgB,OACAe,+BAA+BlB,EAAQF,MAAOE,EAAQD,UACtDM,MAAK,WACJ1B,QAAQC,IAAI,eACZO,EACGgB,OACAG,YAAYC,YAAW,GACvBF,MAAK,SAAUG,GACd7B,QAAQC,IAAI4B,GACZC,aAAaC,QAAQ,QAASF,GAE9BI,OAAOD,SAAW,OAEnBI,OAAM,SAAU7C,UAIpB6C,OAAM,SAAC7C,GAEN,OADAS,QAAQC,IAAI,mBACJV,EAAM8C,MACZ,IAAK,4BACL,IAAK,qBAEH3D,EAAU,CAAEyC,MAAO5B,EAAMG,UAEzB,MACF,IAAK,qBACHhB,EAAUa,EAAMG,cAiB1BzD,qBAAU,WATRuE,EAAKgB,OAAOgB,oBAAmB,SAAC1F,GAE5BwE,EADED,EACSvE,EAEA,SAOd,IAEH,IAOM6C,EAAe,SAAC/G,GACpB,IAAMgH,EAAO,eAAQnB,GACfoB,EATiB,SAAC,GAAqB,IAAnB1J,EAAkB,EAAlBA,KAAM+E,EAAY,EAAZA,MAC1BgF,EAAG,eAAM/J,EAAO+E,GAChBiF,EAAO,eAAMhK,EAAOwI,EAAOxI,IACzBoJ,EAAUX,IAAIU,SAASY,EAAKC,GAA5BZ,MACR,OAAOA,EAAQA,EAAME,QAAQ,GAAGC,QAAU,KAKrBI,CAAiBlH,EAAEmH,QACpCF,EAAcD,EAAQhH,EAAEmH,OAAO5J,MAAQ0J,SAC/BD,EAAQhH,EAAEmH,OAAO5J,MAJH,MAMJyC,EAAEmH,OAAlB5J,EANoB,EAMpBA,KAAM+E,EANc,EAMdA,MACZoG,EAAW,2BACND,GADK,kBAEPlL,EAAO+E,KAEVwD,EAAUkB,IAGZ,OACE,6BACE,wCACA,0BAAMS,SApFW,SAACzH,GACpBA,EAAEyE,iBACF2C,QAAQC,IAAI,iBACZ,IAAMxB,EAASa,IACfZ,EAAU,CAAED,OAAQA,GAAU,KAC1BA,GACJ2B,MA+EI,kBAAC,EAAD,CACErF,KAAK,QACL5E,KAAK,QAELgE,MAAM,QACNgB,SAAUwE,EACVzB,IAAKO,EAAO0C,QAEd,kBAAC,EAAD,CACEpG,KAAK,WACL5E,KAAK,WAELgE,MAAM,WACNgB,SAAUwE,EACVzB,IAAKO,EAAO2C,WAUd,4BAAQb,SAAUjB,IAAYhH,UAAU,mBAAxC,eCzIOmK,EAhBA,SAAC9K,GAad,OAZA6I,EACGgB,OACAkB,UACAhB,MAAK,WAEJI,aAAaa,WAAW,SACxBV,OAAOD,SAAW,OAEnBI,OAAM,SAAU7C,GAEfS,QAAQC,IAAIV,MAET,+BC6BMqD,EA1CO,WAAO,IAAD,EACApH,mBAAS,IADT,mBACnB2F,EADmB,KACZ0B,EADY,OAEsBrH,oBAAS,GAF/B,mBAEnBsH,EAFmB,aAGAtH,mBAAS,OAHT,mBAGnB+D,EAHmB,UAa1B,OACE,yBAAKjH,UAAU,IACb,wBAAIA,UAAU,IAAd,uBACA,yBAAKA,UAAU,IACb,0BAAMyK,OAAO,IACVD,GACC,yBAAKxK,UAAU,IAAf,kCAES,OAAViH,GAAkB,yBAAKjH,UAAU,IAAIiH,GAEtC,kBAAC,EAAD,CACEpF,MAAM,QACNY,KAAK,QACL5E,KAAK,YACL4H,GAAG,YACH7C,MAAOiG,EACP/F,YAAY,iBACZD,SA1Bc,SAAC6H,GAAW,IAAD,EACTA,EAAM3H,cAAtBlF,EADyB,EACzBA,KAAM+E,EADmB,EACnBA,MACD,cAAT/E,GACF0M,EAAS3H,MAyBL,4BAAQ5C,UAAU,mBAAlB,yBAEF,kBAAC,IAAD,CAAMuC,GAAG,SAASvC,UAAU,IAA5B,gC,QCXO2K,EAtBQ,SAAC,GAOlB,EANJpJ,KAMK,IALMqJ,EAKP,EALJC,UAIGhF,GACC,EAJJiF,OAII,EAHJtG,KAGI,EAFJuG,WAEI,kEACJ,OACE,kBAAC,IAAD,iBACMlF,EADN,CAEEiF,OAAQ,SAACzL,GAAD,OACNmK,aAAawB,QAAQ,SACnB,kBAACJ,EAAcvL,GAEf,kBAAC,IAAD,CAAUkD,GAAI,CAAEsH,SAAU,SAAUD,KAAMvK,EAAMqK,iBCkD3CuB,MA7Cf,WAAgB,IAAD,EACW/H,mBAAS,MADpB,mBACNsB,EADM,KACA0G,EADA,KAeb,OAZAvH,qBAAU,WACR,IACE,IAAMwH,EAAM3B,aAAawB,QAAQ,SAE3BxG,EAAO4G,YAAUD,GACvBD,EAAQ1G,GACRkD,QAAQC,IAAInD,GACZ,MAAOyC,GACPS,QAAQC,IAAIV,MAEb,IAGD,6BACE,kBAAC,EAAD,CAAQzC,KAAMA,IACd,0BAAMxE,UAAU,aACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuB,KAAK,SAASsJ,UAAWjC,IAChC,kBAAC,IAAD,CAAOrH,KAAK,YAAYsJ,UAAWb,IACnC,kBAAC,IAAD,CAAOzI,KAAK,UAAUsJ,UAAWV,IAEjC,kBAAC,EAAD,CACE5I,KAAK,cACLsJ,UAAW9E,EACXvB,KAAMA,IAER,kBAAC,IAAD,CACEjD,KAAK,UACLuJ,OAAQ,SAACzL,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBmF,KAAMA,QAE9C,kBAAC,IAAD,CAAOjD,KAAK,aAAasJ,UAAW7F,IACpC,kBAAC,IAAD,CAAOzD,KAAK,WAAWsJ,UAAW5F,IAClC,kBAAC,IAAD,CAAO1D,KAAK,aAAasJ,UAAW3F,IACpC,kBAAC,IAAD,CAAO3D,KAAK,kBAAkBsJ,UAAWP,IACzC,kBAAC,IAAD,CAAUV,KAAK,IAAIyB,OAAK,EAAC9I,GAAG,YAC5B,kBAAC,IAAD,CAAUA,GAAG,mBCnDH+I,QACW,cAA7B3B,OAAOD,SAAS6B,UAEe,UAA7B5B,OAAOD,SAAS6B,UAEhB5B,OAAOD,SAAS6B,SAASvF,MACvB,2D,YCTNwF,IAASV,OACP,kBAAC,IAAMW,WAAP,KACE,kBAAC,IAAD,CAAeC,SAAUC,UACvB,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEdpC,OAAM,SAAA7C,GACLS,QAAQT,MAAMA,EAAMG,c","file":"static/js/main.19358d72.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n];\n\nexport function getGenres() {\n  return genres.filter((g) => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find((g) => g.name === movie.genreName);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  //   console.log(currentPage);\n\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  //const pages = [1, 2, 3];\n  //[1,2,3].map()\n  //[1...pagesCount].map()\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a\n              href=\"\"\n              className=\"page-link\"\n              onClick={(e) => onPageChange(page, e)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst ListGroup = (props) => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    onItemSelect,\n    selectedItem,\n  } = props;\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React from \"react\";\n\n//Input liked:boolean\n//Output onClick\n\nconst Like = (props) => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    ></i>\n  );\n};\n\nexport default Like;\n","import React from \"react\";\n\n// columns:array\n//sort column: object\n//onSort: function\n\nconst TableHeader = (props) => {\n  const raiseSort = (path) => {\n    const sortColumnN = { ...props.sortColumn };\n    // console.log(sortColumnN);\n    if (sortColumnN.path === path) {\n      sortColumnN.order = sortColumnN.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumnN.path = path;\n      sortColumnN.order = \"asc\";\n    }\n    props.onSort(sortColumnN);\n  };\n\n  const renderSortIcon = (column) => {\n    const { sortColumn } = props; //object destructuring\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n  return (\n    <thead>\n      <tr>\n        {props.columns.map((column) => (\n          <th\n            className=\"clickable\"\n            key={column.path || column.key}\n            onClick={() => raiseSort(column.path)}\n          >\n            {column.label} {renderSortIcon(column)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default TableHeader;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nconst TableBody = (props) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n  const createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  const { data, columns } = props; //object destructoring\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {columns.map((column) => (\n            <td key={createKey(item, column)}>{renderCell(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableheader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = (props) => {\n  const { columns, onSort, sortColumn, data } = props;\n\n  return (\n    <table className=\"table\">\n      <TableHeader\n        columns={columns}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      ></TableHeader>\n      <TableBody data={data} columns={columns}></TableBody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport Movie from \"../components/movie\";\nimport { useState } from \"react\";\nimport TableHeader from \"./common/tableheader\";\nimport Like from \"./common/like\";\nimport TableBody from \"./common/tableBody\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\n\nconst MoviesTable = (props) => {\n  const { movies, onSort, sortColumn } = props;\n  const columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onClick={() => props.onLike(movie)} />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: (movie) => (\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => props.onDelete(movie)}\n        >\n          Delete\n        </button>\n      ),\n    },\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      data={movies}\n      sortColumn={sortColumn}\n      onSort={onSort}\n    ></Table>\n  );\n};\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    ></input>\n  );\n};\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { useEffect } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./searchBox\";\n\nconst Movies = (props) => {\n  const [movies, setMovies] = useState([]); //useEffect\n  const [pageSize, setSize] = useState(4);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n  const [sortColumn, setSortColumn] = useState({ path: \"title\", order: \"asc\" });\n  const [query, setQuery] = useState(\"\");\n  // let filtered = [];\n  let sorted = [];\n  let moviesP = [];\n\n  useEffect(() => {\n    setMovies(getMovies);\n    let genresDB = getGenres();\n    let genresAll = [{ _id: \"\", name: \"All Genres\" }].concat(genresDB);\n    setGenres(genresAll);\n  }, []);\n\n  // const getPagedData = () => {\n  let filtered = movies;\n  if (query)\n    filtered = movies.filter((m) =>\n      m.title.toLowerCase().startsWith(query.toLowerCase())\n    );\n  else if (selectedGenre && selectedGenre._id)\n    filtered = movies.filter((m) => m.genre._id === selectedGenre._id);\n\n  sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n  moviesP = paginate(sorted, currentPage, pageSize);\n  // };\n\n  const showMessage = () => {\n    if (movies.length === 0) {\n      return `There are no more films in db.`;\n    } else {\n      return `Showing ${filtered.length} movies in the database`;\n    }\n  };\n  const handlePageChange = (page, e) => {\n    e.preventDefault();\n    setCurrentPage(page);\n  };\n\n  const handleDelete = (movie) => {\n    let newMovies = movies.filter((item) => item._id !== movie._id);\n    setMovies(newMovies);\n  };\n\n  const handleLike = (movie) => {\n    const nMovies = [...movies];\n    const index = nMovies.indexOf(movie);\n    nMovies[index] = { ...nMovies[index] };\n    nMovies[index].liked = !nMovies[index].liked;\n    setMovies(nMovies);\n  };\n\n  const handleGenreSelect = (genre) => {\n    setSelectedGenre(genre);\n    setCurrentPage(1);\n    setQuery(\"\");\n  };\n\n  const handleSort = (sortColumn) => {\n    setSortColumn(sortColumn);\n  };\n\n  const handleSearch = (query) => {\n    setQuery(query);\n    setSelectedGenre(null);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"starter-template\">\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={genres}\n            onItemSelect={handleGenreSelect}\n            selectedItem={selectedGenre}\n          ></ListGroup>\n        </div>\n        <div className=\"col\">\n          {props.user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ margin: \"0 0 15px 0\" }}\n            >\n              New Movie\n            </Link>\n          )}\n          <h5>{showMessage()}</h5>\n          <SearchBox value={query} onChange={handleSearch}></SearchBox>\n          <MoviesTable\n            movies={moviesP}\n            onLike={handleLike}\n            onDelete={handleDelete}\n            onSort={handleSort}\n            sortColumn={sortColumn}\n          ></MoviesTable>\n          <Pagination\n            itemsCount={filtered.length}\n            pageSize={pageSize}\n            onPageChange={handlePageChange}\n            currentPage={currentPage}\n          ></Pagination>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  //convert items array in lodash obj\n  return _(items).slice(startIndex).take(pageSize).value();\n  //   _.slice(items, startIndex);\n  // _.take()\n}\n","import React, { Component } from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Page not found!</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"navbar-nav collapse navbar-collapse\" id=\"navbarNav\">\n        <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n          Movies\n        </NavLink>\n        <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n          Customers\n        </NavLink>\n        <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n          Rentals\n        </NavLink>\n\n        {!props.user && (\n          <React.Fragment>\n            <NavLink className=\"nav-item nav-link\" to=\"/login\">\n              Login\n            </NavLink>\n            <NavLink className=\"nav-item nav-link\" to=\"/register\">\n              Register\n            </NavLink>\n          </React.Fragment>\n        )}\n        {props.user && (\n          <React.Fragment>\n            <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n              Logout\n            </NavLink>\n          </React.Fragment>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\n\nconst Input = ({ name, label, err, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        {...rest}\n        id=\"username\"\n        name={name}\n        className=\"form-control\"\n        // type={type}\n        // value={value}\n        // onChange={onChange}\n      ></input>\n      {err && <div className=\"alert alert-danger\">{err}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useState } from \"react\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\nimport Input from \"./common/input\";\nimport Joi from \"joi-browser\";\n\nconst MovieForm = ({ match, history }) => {\n  const [genres, setGenres] = useState([]);\n  const [movie, setMovie] = useState({\n    title: \"\",\n    genreName: \"\",\n    numberInStock: 0,\n    dailyRentalRate: 0,\n  });\n\n  const [errors, setErrors] = useState({\n    title: \"\",\n    genreName: \"\",\n    numberInStock: \"\",\n    dailyRentalRate: \"\",\n  });\n\n  const schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreName: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Rate\"),\n  };\n\n  const type = \"text\";\n  const movieId = match.params.id;\n\n  useEffect(() => {\n    const genres = getGenres();\n    setGenres(genres);\n\n    if (movieId === \"new\") return;\n\n    const movie = getMovie(movieId);\n\n    if (!movie) return history.replace(\"/not-found\");\n\n    setMovie(mapToViewModel(movie));\n  }, []);\n\n  const mapToViewModel = (movie) => {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreName: movie.genre.name,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  };\n\n  const validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(movie, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  const handleChange = (e) => {\n    const errorsN = { ...errors };\n    const errorMessage = validateProperty(e.target);\n    if (errorMessage) errorsN[e.target.name] = errorMessage;\n    else delete errorsN[e.target.name];\n\n    var { name, value } = e.target;\n    setMovie({\n      ...movie,\n      [name]: value,\n    });\n    console.log(\"MOVIE \" + movie);\n    setErrors(errorsN);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = validate();\n    setErrors(errors !== null ? errors : {});\n    doSubmit();\n  };\n\n  const validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schemaN = { [name]: schema[name] };\n    console.log(\"Schema n\", schemaN);\n    const { error } = Joi.validate(obj, schemaN);\n    return error ? error.details[0].message : null;\n  };\n\n  const doSubmit = () => {\n    saveMovie(movie);\n    history.push(\"/movies\");\n  };\n\n  return (\n    <div>\n      {/* <h1>Movie form {match.params.id}</h1> */}\n      <h1>Movie form</h1>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type={type}\n          name=\"title\"\n          value={movie.title}\n          label=\"Title\"\n          onChange={handleChange}\n          err={errors.title}\n        ></Input>\n\n        <div className=\"form-group\">\n          <label>Genre</label>\n          <select\n            className=\"form-control\"\n            value={movie.genreName}\n            name=\"genreName\"\n            label=\"Genre\"\n            onChange={handleChange}\n            err={errors.genreId}\n          >\n            {genres.map((genre) => (\n              <option>{genre.name}</option>\n            ))}\n          </select>\n        </div>\n\n        <Input\n          type=\"number\"\n          name=\"numberInStock\"\n          value={movie.numberInStock}\n          label=\"Number in Stock\"\n          onChange={handleChange}\n          err={errors.numberInStock}\n        ></Input>\n\n        <Input\n          type=\"number\"\n          name=\"dailyRentalRate\"\n          value={movie.dailyRentalRate}\n          label=\"Rate\"\n          onChange={handleChange}\n          err={errors.dailyRentalRate}\n        ></Input>\n        <button disabled={validate()} className=\"btn btn-primary\">\n          {movieId === \"new\" ? \"Add Movie\" : \"Edit Movie\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MovieForm;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyD5sDFkWdHMnmHbuB_ZKthF4CcZvBIFpHk\",\n  authDomain: \"vidly-d52f3.firebaseapp.com\",\n  databaseURL: \"https://vidly-d52f3.firebaseio.com\",\n  projectId: \"vidly-d52f3\",\n  storageBucket: \"vidly-d52f3.appspot.com\",\n  messagingSenderId: \"107709914335\",\n  appId: \"1:107709914335:web:051f1fbe153ffa722a1d6a\",\n};\n\nconst fire = firebase.initializeApp(config);\n\nexport default fire;\n","import React, { useState } from \"react\";\nimport Input from \"./common/input\";\nimport Joi from \"joi-browser\";\nimport fire from \"../firebase\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginForm = (props) => {\n  const [account, setAccount] = useState({ email: \"\", password: \"\" });\n  const [errors, setErrors] = useState({ email: \"\", password: \"\" });\n  const type = \"text\";\n\n  const schema = {\n    email: Joi.string().required().label(\"Email\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  const validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(account, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n\n    //old validation\n    // const errors = {};\n    // if (account.username.trim() === \"\")\n    //   errors.username = \"Username is required.\";\n    // if (account.password.trim() === \"\")\n    //   errors.password = \"Password is required.\";\n    // return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = validate();\n    setErrors(errors !== null ? errors : {});\n    doSubmit();\n  };\n\n  const doSubmit = async () => {\n    //call the server\n\n    fire\n      .auth()\n      .signInWithEmailAndPassword(account.email, account.password)\n      .then(() => {\n        console.log(\"Login OK\");\n        fire\n          .auth()\n          .currentUser.getIdToken(true)\n          .then(function (idToken) {\n            localStorage.setItem(\"token\", idToken);\n            // props.history.push(\"/\");\n            const location = props.location;\n            window.location =\n              location.from && location.from.pathname\n                ? location.from.pathname\n                : \"/\";\n          })\n          .catch(function (error) {\n            //Handle error\n          });\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setErrors({ email: error.message });\n            break;\n          case \"auth/wrong-password\":\n            setErrors({ password: error.message });\n            break;\n        }\n      });\n  };\n\n  const validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schemaN = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, schemaN);\n    return error ? error.details[0].message : null;\n  };\n\n  const handleChange = (e) => {\n    const errorsN = { ...errors };\n    const errorMessage = validateProperty(e.target);\n    if (errorMessage) errorsN[e.target.name] = errorMessage;\n    else delete errorsN[e.target.name];\n\n    var { name, value } = e.target;\n    setAccount({\n      ...account,\n      [name]: value,\n    });\n    setErrors(errorsN);\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type={type}\n          name=\"email\"\n          value={account.email}\n          label=\"Email\"\n          onChange={handleChange}\n          err={errors.email}\n        ></Input>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={account.password}\n          label=\"Password\"\n          onChange={handleChange}\n          err={errors.password}\n        ></Input>\n        <button disabled={validate()} className=\"btn btn-primary\">\n          Login\n        </button>\n      </form>\n      <p className=\"text-center my-3\">\n        Don't have an account?{\" \"}\n        <Link to=\"register\" className=\"text-blue-500 hover:text-blue-600\">\n          Register here\n        </Link>{\" \"}\n        <br />{\" \"}\n        <Link to=\"password-reset\" className=\"text-blue-500 hover:text-blue-600\">\n          Forgot Password?\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport Input from \"./common/input\";\nimport Joi from \"joi-browser\";\nimport fire from \"../firebase\";\nimport { useEffect } from \"react\";\n\nconst RegisterForm = (props) => {\n  const [account, setAccount] = useState({\n    email: \"\",\n    password: \"\",\n    // name: \"\",\n  });\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    // name: \"\" ,\n  });\n  const schema = {\n    email: Joi.string().required().email().label(\"Email\"),\n    password: Joi.string().min(5).max(15).required(),\n    // name: Joi.string().required().label(\"Name\"),\n  };\n\n  const validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(account, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) {\n      //item.path[0] trebuie sa fie email sau password\n      if (item.path[0] === \"email\" || item.path[0] === \"password\") {\n        errors[item.path[0]] = item.message;\n        return errors;\n      } else {\n        return null;\n      }\n    }\n\n    //old validation\n    // const errors = {};\n    // if (account.username.trim() === \"\")\n    //   errors.username = \"Username is required.\";\n    // if (account.password.trim() === \"\")\n    //   errors.password = \"Password is required.\";\n    // return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Handle Submit\");\n    const errors = validate();\n    setErrors({ errors: errors || {} });\n    if (errors) return;\n    doSubmit();\n  };\n\n  const doSubmit = () => {\n    //call the server\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(account.email, account.password)\n      .then(() => {\n        console.log(\"Register OK\");\n        fire\n          .auth()\n          .currentUser.getIdToken(true)\n          .then(function (idToken) {\n            console.log(idToken);\n            localStorage.setItem(\"token\", idToken);\n            // props.history.push(\"/\");\n            window.location = \"/\";\n          })\n          .catch(function (error) {\n            //Handle error\n          });\n      })\n      .catch((error) => {\n        console.log(\"Error register \");\n        switch (error.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            // setErrors(error.message);\n            setErrors({ email: error.message });\n            // alert(error.message);\n            break;\n          case \"auth/weak-password\":\n            setErrors(error.message);\n            // alert(error.message);\n            break;\n        }\n      });\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (account) {\n        setAccount(user);\n      } else {\n        setAccount({});\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  const validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schemaN = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, schemaN);\n    return error ? error.details[0].message : null;\n  };\n\n  const handleChange = (e) => {\n    const errorsN = { ...errors };\n    const errorMessage = validateProperty(e.target);\n    if (errorMessage) errorsN[e.target.name] = errorMessage;\n    else delete errorsN[e.target.name];\n\n    var { name, value } = e.target;\n    setAccount({\n      ...account,\n      [name]: value,\n    });\n    setErrors(errorsN);\n  };\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          // value={account.email}\n          label=\"Email\"\n          onChange={handleChange}\n          err={errors.email}\n        ></Input>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          // value={account.password}\n          label=\"Password\"\n          onChange={handleChange}\n          err={errors.password}\n        ></Input>\n        {/* <Input\n          type=\"text\"\n          name=\"name\"\n          value={account.name}\n          label=\"Name\"\n          onChange={handleChange}\n          err={errors.name}\n        ></Input> */}\n        <button disabled={validate()} className=\"btn btn-primary\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n\n  async function onRegister() {\n    try {\n      // await firebase.register(account.password, account.email, account.name);\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"../firebase\";\n\nconst Logout = (props) => {\n  fire\n    .auth()\n    .signOut()\n    .then(function () {\n      // Sign-out successful.\n      localStorage.removeItem(\"token\");\n      window.location = \"/\";\n    })\n    .catch(function (error) {\n      // An error happened.\n      console.log(error);\n    });\n  return <div></div>;\n};\n\nexport default Logout;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"./common/input\";\n\nconst ResetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n    if (name === \"userEmail\") {\n      setEmail(value);\n    }\n  };\n  const sendResetEmail = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <div className=\"\">\n      <h1 className=\"\">Reset your Password</h1>\n      <div className=\"\">\n        <form action=\"\">\n          {emailHasBeenSent && (\n            <div className=\"\">An email has been sent to you!</div>\n          )}\n          {error !== null && <div className=\"\">{error}</div>}\n\n          <Input\n            label=\"Email\"\n            type=\"email\"\n            name=\"userEmail\"\n            id=\"userEmail\"\n            value={email}\n            placeholder=\"Add your email\"\n            onChange={onChangeHandler}\n          />\n          <button className=\"btn btn-primary\">Send me a reset link</button>\n        </form>\n        <Link to=\"/login\" className=\"\">\n          &larr; back to login page\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","import { rest } from \"lodash\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport getCurrentUser from \"../../services/authService\";\n\nconst ProtectedRoute = ({\n  path,\n  component: Component,\n  render,\n  user,\n  isLoggedIn,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem(\"token\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\", from: props.location }} />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { getMovies } from \"./services/fakeMovieService\";\nimport Pagination from \"./components/common/pagination\";\nimport { paginate } from \"./components/utils/paginate\";\nimport ListGroup from \"./components/common/listGroup\";\nimport { getGenres } from \"./services/fakeGenreService\";\nimport { useEffect } from \"react\";\nimport MoviesTable from \"./components/moviesTable\";\nimport _ from \"lodash\";\nimport Movies from \"./components/movies\";\nimport { Redirect, Route, Router, Switch } from \"react-router-dom\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport NewMovieForm from \"./components/newMovieForm\";\nimport Logout from \"./components/Logout\";\nimport ResetPassword from \"./components/resetPassword\";\nimport jwtDecode from \"jwt-decode\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    try {\n      const jwt = localStorage.getItem(\"token\");\n      //decode jwt\n      const user = jwtDecode(jwt);\n      setUser(user);\n      console.log(user);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <div>\n      <NavBar user={user}></NavBar>\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/login\" component={LoginForm}></Route>\n          <Route path=\"/register\" component={RegisterForm}></Route>\n          <Route path=\"/logout\" component={Logout}></Route>\n          {/* <Route path=\"/movies/:id\" component={MovieForm}></Route> */}\n          <ProtectedRoute\n            path=\"/movies/:id\"\n            component={MovieForm}\n            user={user}\n          ></ProtectedRoute>\n          <Route\n            path=\"/movies\"\n            render={(props) => <Movies {...props} user={user} />}\n          ></Route>\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/rentals\" component={Rentals}></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Route path=\"/password-reset\" component={ResetPassword}></Route>\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}